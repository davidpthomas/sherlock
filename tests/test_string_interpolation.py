
# Generated by CodiumAI
from sherlock_project.sherlock import interpolate_string


import pytest

class TestCodeUnderTest:

    # Interpolates username into a simple string correctly
    def test_interpolates_username_into_string(self):
        input_str = "Hello, {}!"
        username = "Sherlock"
        expected_output = "Hello, Sherlock!"
        assert interpolate_string(input_str, username) == expected_output

    # Handles empty strings, dictionaries, and lists without errors
    def test_handles_empty_inputs(self):
        assert interpolate_string("", "Sherlock") == ""
        assert interpolate_string({}, "Sherlock") == {}
        assert interpolate_string([], "Sherlock") == []

    # Interpolates username into all values of a dictionary correctly
    def test_interpolates_username_into_dictionary(self):
        input_dict = {
            'key1': 'Hello, {}!',
            'key2': 'Welcome Back, {}!'
        }
        username = "Sherlock"
        expected_output = {
            'key1': 'Hello, Sherlock!',
            'key2': 'Welcome Back, Sherlock!'
        }
        assert interpolate_string(input_dict, username) == expected_output

    # Interpolates username into all elements of a list correctly
    def test_interpolates_username_into_list(self):
        input_list = ["Hello, {}", "Welcome, {}", "Hi, {}"]
        username = "Sherlock"
        expected_output = ["Hello, Sherlock", "Welcome, Sherlock", "Hi, Sherlock"]
        assert interpolate_string(input_list, username) == expected_output

    # Handles dictionaries with non-string keys
    def test_handles_dicts_with_non_string_keys(self):
        input_dict = {1: "Hello, {}", 2: "Welcome, {}"}
        username = "Sherlock"
        expected_output = {1: "Hello, Sherlock", 2: "Welcome, Sherlock"}
        assert interpolate_string(input_dict, username) == expected_output

    # Handles lists with mixed data types
    def test_handles_mixed_data_types(self):
        input_list = ["Hello, {}", {"name": "{}"}, ["Hi, {}", {"user": "{}"}]]
        username = "Sherlock"
        expected_output = ["Hello, Sherlock", {"name": "Sherlock"}, ["Hi, Sherlock", {"user": "Sherlock"}]]
        assert interpolate_string(input_list, username) == expected_output